#!/bin/bash

#make a copy letsencrypt to pki
cp /etc/letsencrypt/live/{{ ansible_fqdn }}/privkey.pem  {{ pki_location }}/{{ ansible_fqdn }}.key 
cp /etc/letsencrypt/live/{{ ansible_fqdn }}/cert.pem  {{ pki_location }}/{{ ansible_fqdn }}.crt 
cp /etc/letsencrypt/live/{{ ansible_fqdn }}/chain.pem  {{ pki_location }}/ca.crt 

# convert priv key ti pkcs1 format for mysql
openssl rsa -in {{ pki_location }}/{{ ansible_fqdn }}.key -out {{ pki_location }}/{{ ansible_fqdn }}.pkcs1.key 2>/dev/null

# set the right permissions
chown root:pki /etc/pki/*
chmod 0640 /etc/pki/*

#iptables revert temp http access
if [ -x /usr/sbin/apache2 ] && [ `hostname` != 'db' ];
then
/bin/systemctl start apache2
else
iptables -D INPUT -p tcp -m tcp --dport 80 -j ACCEPT
ip6tables -D INPUT -p tcp -m tcp --dport 80 -j ACCEPT
fi

# revert port forwarding
if [ -x /usr/bin/turnserver ] ;
then
iptables -t nat -A PREROUTING -p tcp -m tcp --dport 80 -j REDIRECT --to-ports 3478
ip6tables -t nat -A PREROUTING -p tcp -m tcp --dport 80 -j REDIRECT --to-ports 3478

# restart coturn
[ -x /usr/bin/turnserver ] && /bin/systemctl kill -s SIGUSR2 coturn.service
fi

# restart mysql 
#There is no other way to reload cert
[ -x /usr/sbin/mysqld ] && /bin/systemctl restart mysql

